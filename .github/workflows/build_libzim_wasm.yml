# Workflow to build and publish the libzim ASM and WASM arttefacts together with the JavaScript wrapper.
# If this workflow is triggered by the creation of a draft release, then the artefacts are uploaded to the release assets.
# If it is triggered by a push or pull request to main, or manually, then the artefacts are archived under the corresponding Action.

name: Build and publish release artefacts (Docker)

on:
  push:
    branches: [ main ]
    tags:
    - 'v*' # Tag push events matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: |
          If you wish to create a draft release, set the tag version, like v9.9.9 (must not be an exisitng tag).
          If left blank or incorrect format, archives will be archived instead of being uploaded to Releases.
        required: false
        default: ''

# Define top-level environment vars we can refer to below
env:
  VERSION: ${{ github.ref_name }}
  DISPATCH_VERSION: ${{ github.event.inputs.version }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
jobs:
  build:
    name: Build and publish W/ASM artefacts 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # Customizes the Emscripten docker container via the Dockerfile in this repo
    - name: Build the Docker image
      run: docker build -t "docker-emscripten-libzim:v3" ./docker
    # Creates the ASM and WASM artefacts, and the JS wrappers, using the Makefile in this repo
    - name: Compile the libzim WASM artefacts
      run: docker run --rm -v $(pwd):/src -u $(id -u):$(id -g) docker-emscripten-libzim:v3 make
    - name: List directories with updated archives
      run: |
        echo -e "\nList ./ :"
        ls -l
        echo -e "\nList ./tests/prototype/ :"
        ls -l tests/prototype/
        echo -e "\nList ./tests/test_large_file_access/ :"
        ls -l tests/test_large_file_access/ 
    # If we are not creating a release, archive the artefacts under this Action run
    - name: Archive build artefacts
      if: |
        github.event_name == 'pull_request' || github.event_name == 'push' && ! startsWith(github.ref_name, 'v')
        || ! startsWith(github.event.inputs.version, 'v')
      uses: actions/upload-artifact@v3
      with:
        name: libzim-wasm-artefacts
        path: |
          libzim-wasm.*
          libzim-asm.*
          tests/test_large_file_access/large_file_access.*
    # Otherwise, zip the artefacts into respective packages (asm and wasm), create and upload releases
    - name: Zip the artefacts and create draft release
      id: zip-release
      if: github.event_name == 'push' && startsWith(github.ref_name, 'v') || startsWith(github.event.inputs.version, 'v')
      run: |
        if [[ ! $VERSION =~ ^v?[0-9.]+ ]]; then
          VERSION=$DISPATCH_VERSION
        fi
        # Create a draft release and upload zipped artefacts as release assets
        chmod +x ./scripts/create_draft_release.sh
        ./scripts/create_draft_release.sh
